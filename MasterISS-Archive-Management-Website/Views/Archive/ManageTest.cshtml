@*@using MasterISS_Archive_Management_Website.ViewModels*@

@model MasterISS_Archive_Management_Website.ViewModels.UploadFileViewModel
@using MasterISS_Archive_Management_Website.ViewModels

@*@model IEnumerable<FileDetailViewModel>*@
@*@model IEnumerable<FileAndAttachmentViewModel>*@

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    <style type="text/css">
        #dropzone {
            background: gray;
            border: black dashed 3px;
            width: 200px;
            padding: 50px;
            text-align: center;
            color: white;
        }



        .dropSection {
            height: 300px;
            width: 600px;
            background-color: skyblue;
        }

        /*   .btnUpload {
            display: none;
        }*/

        .active {
            background-color: yellow !important;
        }
    </style>



}

<div class="container">
    <div>
        <h1 class="home-page">
            @MasterISS_Archive_Management_Website.Localization.Model.ArchiveNumber  @ViewBag.Id
        </h1>

        <div class="message">
            @ViewBag.FileSizeError
            @ViewBag.FileCountError
            @ViewBag.UploadStatus
            @ViewBag.UploadFileStatus
        </div>

        @ViewBag.Exception

        @foreach (var item in Model.AttachmentTypeList)
        {
            <table>
                <tr>
                    @Html.DisplayFor(model => item.AttachmentTypeEnumName)
                </tr>

                @if (Model.FileDetailList != null)
                {
                    foreach (var fileItem in Model.FileDetailList)
                    {
                        if (item.AttachmentTypeEnumNumber == fileItem.AttachmentType)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(model => fileItem.CreationDate)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(model => fileItem.MIMEType)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => fileItem.FileExtention)
                                    </td>*@
                                <td>
                                    <a href="@Url.Action("Download", "Archive", new { Id = ViewBag.Id,FileName = fileItem.ServerSideName })">@MasterISS_Archive_Management_Website.Localization.Model.Download</a>
                                </td>
                                <td>
                                    @* <a href="@Url.Action("Delete", "Archive", new { Id = ViewBag.Id, FileName = fileItem.ServerSideName })">Delete</a>*@
                                    @*   @Html.ActionLink("Delete", "Delete", "Archive", new { Id = ViewBag.Id, FileName = fileItem.ServerSideName })*@

                                    @using (Html.BeginForm("Delete", "Archive", FormMethod.Post, new { @class = "delete-submit" }))
                                    {
                                        <div class="hidden-part">
                                            @Html.TextBox("Id")

                                            @Html.Hidden("serverSideName", fileItem.ServerSideName)
                                        </div>

                                        <button type="submit">@MasterISS_Archive_Management_Website.Localization.Model.Delete</button>
                                    }
                                </td>
                            </tr>
                        }
                    }
                }
                <tr>
                    <td colspan="5">

                        @using (Html.BeginForm("ManageTest", "Archive", FormMethod.Post, new { enctype = "multipart/form-data", @class = "upload-submit" }))

                        {<h3>Choose file(s)</h3>

                            <p>

                                @*<input id="files-upload" type="file" multiple>*@

                                    @Html.TextBoxFor(m => m.Files, new { type = "file", @multiple = "multiple", @class = "customerDropFile", @id="files-upload" })


                            </p>

                            <p id="drop-area">

                                <span class="drop-instructions">or drag and drop files here</span>

                                <span class="drop-over">Drop files here!</span>

                            </p>

                            <ul id="file-list">
                                <li class="no-items">(no files uploaded yet)</li>
                            </ul>

                            @Html.HiddenFor(m => m.Id)
                            @Html.Hidden("AttachmentType", item.AttachmentTypeEnumNumber)

                            @Html.HiddenFor(model => item.AttachmentTypeEnumNumber)
                            <button type="submit">Save</button>
                        }



                        @*@using (Html.BeginForm("ManageTest", "Archive", FormMethod.Post, new { enctype = "multipart/form-data", @class = "upload-submit" }))*@
                        <!--{<div class="dropSection">
    </div>
    <br />
    <label>Uploaded Files:</label>
    <hr />
    <div id="uploadedFiles">

    </div>-->
                        @*@Html.HiddenFor(m => m.Id)*@
                        @*@Html.Hidden("AttachmentType", item.AttachmentTypeEnumNumber)*@

                        @*@Html.HiddenFor(model => item.AttachmentTypeEnumNumber)*@

                        <!--<input type="submit" class="btnUpload" value="Upload" />

    }-->
                        @*@using (Html.BeginForm("ManageTest", "Archive", FormMethod.Post, new { enctype = "multipart/form-data", @class = "upload-submit" }))*@
                        <!--{

    <!--<div-->
                        <!--@*id=""*@--> <!--<!--class="dropzone drag-area ">-->
                        <!--<di
                        <!--<div class="drag-area">

    <div class="dropzone-msg dz-message needsclick">-->
                        @*@Html.ValidationMessageFor(m => m.Files)*@

                        <!--<div class="hidden-part">-->
                        @*@Html.TextBoxFor(m => m.Files, new { type = "file", @multiple = "multiple", @class = "customerDropFile" })*@
                        <!--</div>-->
                        @*@Html.HiddenFor(m => m.Id)*@
                        @*@Html.Hidden("AttachmentType", item.AttachmentTypeEnumNumber)*@

                        @*@Html.HiddenFor(model => item.AttachmentTypeEnumNumber)*@

                        <!--<input type="file" style="visibility:hidden" class="customerContract" name="customerContract" multiple />
            <h3 class="dropzone-msg-title file-dialog"></h3>
        </div>
    </div>

    <button type="submit" class="upload-button">-->
                        @*@MasterISS_Archive_Management_Website.Localization.Model.Save*@
                        <!--</button>
    <button type="button" class="clear-button">-->
                        @*@MasterISS_Archive_Management_Website.Localization.Model.Clear*@
                        <!--</button>

    <div class="uploading-files">-->
                        @*@MasterISS_Archive_Management_Website.Localization.Model.FileisUploading*@
                        @*</div>
        }-->*@
                    </td>
                </tr>
            </table>
        }
    </div>
</div>

@section script{
    @*@Scripts.Render("~/Scripts/Up-file.js")*@
    <script type="text/javascript" src='https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.3.min.js'></script>
    @*<script src="Scripts/filedrop.js"></script>*@

    @Scripts.Render("~/Scripts/jquery.filedrop.js")
    <script>
        $(".delete-submit").submit(function (e) {
            if (!confirm("Are You Sure?")) {
                e.preventDefault();
            }
        });
    </script>


    <script>
        $(".upload-button").click(function () {
            $('.upload-button').hide();
            $('.clear-button').hide();
            $('.uploading-files').show();
        });
    </script>

    @*<script>
            $('.clear-button').click(function () {
                window.location.href = "@Url.Action("UploadNewFile","Archive")";
            })
        </script>*@

    <script>
        $('.clear-button').click(function () {
            $('.drag-area').empty();
        })
    </script>


    @*<script type="text/javascript">
            $(function () {
                $('.drag-area').filedrop({
                    url: '@Url.Action("Manage","Archive")',
                    allowedfiletypes: ['image/jpeg', 'image/png', 'image/gif'],
                    allowedfileextensions: ['.jpg', '.jpeg', '.png', '.gif'],
                    paramname: 'files',
                    maxfiles: 5,
                    maxfilesize: 5, // in MB
                    dragOver: function () {
                        $('.drag-area').addClass('active-drop');
                    },
                    dragLeave: function () {
                        $('.drag-area').removeClass('active-drop');
                    },
                    drop: function () {
                        $('.drag-area').removeClass('active-drop');
                    },
                    //afterAll: function (e) {
                    //    $('.drag-area').html('file(s) uploaded successfully');
                    //},
                    uploadFinished: function (i, file, response, time) {
                        $('#uploadList').append('<li class="list-group-item">'+file.name+'</li>')
                    }
                })
            })

        </script>*@


    @*<script type="text/javascript">
        $(function () {
            $('#dropzone').filedrop({
                url: '@Url.Action("Manage","Archive")',
                paramname: 'files',
                maxfiles: 5,
                dragover: function () {
                    $('#dropzone').css('background', 'blue');
                },
                dragleave: function () {
                    $('#dropzone').css('background', 'gray');
                },
                drop: function () {
                    $('#dropzone').css('background', 'gray');
                },
                afterall: function () {
                    $('#dropzone').html('the file(s) have been uploaded successfully!');
                },
                uploadfinished: function (i, file, response, time) {
                    $('#uploadresult').append('<li>' + file.name + '</li>');
                }
            });
        });
        </script>*@


    @*<script type="text/javascript">
            $(function () {
                $(".dropSection").filedrop({
                    fallback_class: 'btnUpload',
                    fallback_dropzoneClick: true,
                    url: '@Url.Action("ManageTest","Archive")',
                    allowedfiletypes: ['image/jpeg', 'image/png', 'image/gif', 'application/pdf', 'application/doc'],
                    allowedfileextensions: ['.doc', '.docx', '.pdf', '.jpg', '.jpeg', '.png', '.gif'],
                    paramname: 'postedFiles',
                    maxfiles: 5,
                    maxfilesize: 2,
                    dragOver: function () {
                        $('.dropSection').addClass('active');
                    },
                    dragLeave: function () {
                        $('.dropSection').removeClass('active');
                    },
                    drop: function () {
                        $('.dropSection').removeClass('active');
                    },
                    uploadFinished: function (i, file, response, time) {
                        $('.uploadedFiles').append(file.name + '<br />')
                    },
                    afterAll: function (e) {

                    }
                })
            })
        </script>*@
    <script>
        (function () {

            var filesUpload = document.getElementById("files-upload"),
                dropArea = document.getElementById("drop-area"),
                fileList = document.getElementById("file-list");

            function uploadFile(file) {
                var li = document.createElement("li"),
                    div = document.createElement("div"),
                    img,
                    progressBarContainer = document.createElement("div"),
                    progressBar = document.createElement("div"),
                    reader,
                    xhr,
                    fileInfo;

                li.appendChild(div);

                progressBarContainer.className = "progress-bar-container";
                progressBar.className = "progress-bar";
                progressBarContainer.appendChild(progressBar);
                li.appendChild(progressBarContainer);
                if (typeof FileReader !== "undefined" && (/image/i).test(file.type)) {
                    img = document.createElement("img");
                    li.appendChild(img);
                    reader = new FileReader();
                    reader.onload = (function (theImg) {
                        return function (evt) {
                            theImg.src = evt.target.result;
                        };
                    }(img));
                    reader.readAsDataURL(file);
                }

                // Uploading - for Firefox, Google Chrome and Safari
                xhr = new XMLHttpRequest();

                // Update progress bar
                xhr.upload.addEventListener("progress", function (evt) {
                    if (evt.lengthComputable) {
                        progressBar.style.width = (evt.loaded / evt.total) * 100 + "%";
                    }
                    else {
                        // No data to calculate on
                    }
                }, false);

                // File uploaded
                xhr.addEventListener("load", function () {
                    progressBarContainer.className += " uploaded";
                    progressBar.innerHTML = "Uploaded!";
                }, false);

                xhr.open("post", "upload/upload.php", true);

                // Set appropriate headers
                xhr.setRequestHeader("Content-Type", "multipart/form-data");
                xhr.setRequestHeader("X-File-Name", file.name);
                xhr.setRequestHeader("X-File-Size", file.size);
                xhr.setRequestHeader("X-File-Type", file.type);

                // Send the file (doh)
                xhr.send(file);

                // Present file info and append it to the list of files
                fileInfo = "<div><strong>Name:</strong> " + file.name + "</div>";
                fileInfo += "<div><strong>Size:</strong> " + parseInt(file.size / 1024, 10) + " kb</div>";
                fileInfo += "<div><strong>Type:</strong> " + file.type + "</div>";
                div.innerHTML = fileInfo;

                fileList.appendChild(li);
            }

            function traverseFiles(files) {
                if (typeof files !== "undefined") {
                    for (var i = 0, l = files.length; i < l; i++) {
                        uploadFile(files[i]);
                    }
                }
                else {
                    fileList.innerHTML = "No support for the File API in this web browser";
                }
            }
            filesUpload.addEventListener("change", function () {
                traverseFiles(this.files);
            }, false);
            dropArea.addEventListener("dragleave", function (evt) {
                var target = evt.target;
                if (target && target=== dropArea) {
                this.className = "";
            }
            evt.preventDefault();
            evt.stopPropagation();
        }, false);
    dropArea.addEventListener("dragenter", function (evt) {
        this.className = "over";
        evt.preventDefault();
        evt.stopPropagation();
    }, false);
    dropArea.addEventListener("dragover", function (evt) {
        evt.preventDefault();
        evt.stopPropagation();
    }, false);
    dropArea.addEventListener("drop", function (evt) {
        traverseFiles(evt.dataTransfer.files);
        this.className = "";
        evt.preventDefault();
        evt.stopPropagation();
    }, false);
                                   }) ();
    </script>
}

